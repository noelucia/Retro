{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielagomez/Desktop/ADA/Git/gim-retro/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReact.createElement(\"canvas\", {\n  id: \"canvas\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n});\nvar canvas = document.getElementById('canvas'),\n    ctx = canvas.getContext('2d'),\n    w = canvas.width = window.innerWidth,\n    h = canvas.height = window.innerHeight,\n    hue = 217,\n    stars = [],\n    count = 0,\n    maxStars = 1400; // Thanks @jackrugile for the performance tip! https://codepen.io/jackrugile/pen/BjBGoM\n// Cache gradient\n\nvar canvas2 = document.createElement('canvas'),\n    ctx2 = canvas2.getContext('2d');\ncanvas2.width = 100;\ncanvas2.height = 100;\nvar half = canvas2.width / 2,\n    gradient2 = ctx2.createRadialGradient(half, half, 0, half, half, half);\ngradient2.addColorStop(0.025, '#fff');\ngradient2.addColorStop(0.1, 'hsl(' + hue + ', 61%, 33%)');\ngradient2.addColorStop(0.25, 'hsl(' + hue + ', 64%, 6%)');\ngradient2.addColorStop(1, 'transparent');\nctx2.fillStyle = gradient2;\nctx2.beginPath();\nctx2.arc(half, half, half, 0, Math.PI * 2);\nctx2.fill(); // End cache\n\nfunction random(min, max) {\n  if (arguments.length < 2) {\n    max = min;\n    min = 0;\n  }\n\n  if (min > max) {\n    var hold = max;\n    max = min;\n    min = hold;\n  }\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction maxOrbit(x, y) {\n  var max = Math.max(x, y),\n      diameter = Math.round(Math.sqrt(max * max + max * max));\n  return diameter / 2;\n}\n\nvar Star = function () {\n  this.orbitRadius = random(maxOrbit(w, h));\n  this.radius = random(60, this.orbitRadius) / 12;\n  this.orbitX = w / 2;\n  this.orbitY = h / 2;\n  this.timePassed = random(0, maxStars);\n  this.speed = random(this.orbitRadius) / 50000;\n  this.alpha = random(2, 10) / 10;\n  count++;\n  stars[count] = this;\n};\n\nStar.prototype.draw = function () {\n  var x = Math.sin(this.timePassed) * this.orbitRadius + this.orbitX,\n      y = Math.cos(this.timePassed) * this.orbitRadius + this.orbitY,\n      twinkle = random(10);\n\n  if (twinkle === 1 && this.alpha > 0) {\n    this.alpha -= 0.05;\n  } else if (twinkle === 2 && this.alpha < 1) {\n    this.alpha += 0.05;\n  }\n\n  ctx.globalAlpha = this.alpha;\n  ctx.drawImage(canvas2, x - this.radius / 2, y - this.radius / 2, this.radius, this.radius);\n  this.timePassed += this.speed;\n};\n\nfor (var i = 0; i < maxStars; i++) {\n  new Star();\n}\n\nfunction animation() {\n  ctx.globalCompositeOperation = 'source-over';\n  ctx.globalAlpha = 0.8;\n  ctx.fillStyle = 'hsla(' + hue + ', 64%, 6%, 1)';\n  ctx.fillRect(0, 0, w, h);\n  ctx.globalCompositeOperation = 'lighter';\n\n  for (var i = 1, l = stars.length; i < l; i++) {\n    stars[i].draw();\n  }\n\n  ;\n  window.requestAnimationFrame(animation);\n}\n\nanimation();\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/gabrielagomez/Desktop/ADA/Git/gim-retro/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","canvas","document","getElementById","ctx","getContext","w","width","window","innerWidth","h","height","innerHeight","hue","stars","count","maxStars","canvas2","createElement","ctx2","half","gradient2","createRadialGradient","addColorStop","fillStyle","beginPath","arc","Math","PI","fill","random","min","max","arguments","length","hold","floor","maxOrbit","x","y","diameter","round","sqrt","Star","orbitRadius","radius","orbitX","orbitY","timePassed","speed","alpha","prototype","draw","sin","cos","twinkle","globalAlpha","drawImage","i","animation","globalCompositeOperation","fillRect","l","requestAnimationFrame","render","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n  \n<canvas id=\"canvas\"></canvas>;\n\nvar canvas = document.getElementById('canvas'),\n  ctx = canvas.getContext('2d'),\n  w = canvas.width = window.innerWidth,\n  h = canvas.height = window.innerHeight,\n    \n  hue = 217,\n  stars = [],\n  count = 0,\n  maxStars = 1400;\n\n// Thanks @jackrugile for the performance tip! https://codepen.io/jackrugile/pen/BjBGoM\n// Cache gradient\nvar canvas2 = document.createElement('canvas'),\n    ctx2 = canvas2.getContext('2d');\n    canvas2.width = 100;\n    canvas2.height = 100;\nvar half = canvas2.width/2,\n    gradient2 = ctx2.createRadialGradient(half, half, 0, half, half, half);\n    gradient2.addColorStop(0.025, '#fff');\n    gradient2.addColorStop(0.1, 'hsl(' + hue + ', 61%, 33%)');\n    gradient2.addColorStop(0.25, 'hsl(' + hue + ', 64%, 6%)');\n    gradient2.addColorStop(1, 'transparent');\n\n    ctx2.fillStyle = gradient2;\n    ctx2.beginPath();\n    ctx2.arc(half, half, half, 0, Math.PI * 2);\n    ctx2.fill();\n\n// End cache\n\nfunction random(min, max) {\n  if (arguments.length < 2) {\n    max = min;\n    min = 0;\n  }\n  \n  if (min > max) {\n    var hold = max;\n    max = min;\n    min = hold;\n  }\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction maxOrbit(x,y) {\n  var max = Math.max(x,y),\n      diameter = Math.round(Math.sqrt(max*max + max*max));\n  return diameter/2;\n}\n\nvar Star = function() {\n\n  this.orbitRadius = random(maxOrbit(w,h));\n  this.radius = random(60, this.orbitRadius) / 12;\n  this.orbitX = w / 2;\n  this.orbitY = h / 2;\n  this.timePassed = random(0, maxStars);\n  this.speed = random(this.orbitRadius) / 50000;\n  this.alpha = random(2, 10) / 10;\n\n  count++;\n  stars[count] = this;\n}\n\nStar.prototype.draw = function() {\n  var x = Math.sin(this.timePassed) * this.orbitRadius + this.orbitX,\n      y = Math.cos(this.timePassed) * this.orbitRadius + this.orbitY,\n      twinkle = random(10);\n\n  if (twinkle === 1 && this.alpha > 0) {\n    this.alpha -= 0.05;\n  } else if (twinkle === 2 && this.alpha < 1) {\n    this.alpha += 0.05;\n  }\n\n  ctx.globalAlpha = this.alpha;\n    ctx.drawImage(canvas2, x - this.radius / 2, y - this.radius / 2, this.radius, this.radius);\n  this.timePassed += this.speed;\n}\n\nfor (var i = 0; i < maxStars; i++) {\n  new Star();\n}\n\nfunction animation() {\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.globalAlpha = 0.8;\n    ctx.fillStyle = 'hsla(' + hue + ', 64%, 6%, 1)';\n    ctx.fillRect(0, 0, w, h)\n  \n  ctx.globalCompositeOperation = 'lighter';\n  for (var i = 1, l = stars.length; i < l; i++) {\n    stars[i].draw();\n  };  \n  \n  window.requestAnimationFrame(animation);\n}\n\nanimation();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}