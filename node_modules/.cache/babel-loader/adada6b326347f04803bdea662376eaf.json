{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielagomez/Desktop/ADA/Git/gim-retro/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport CardDias from \"./Componentes/CardDias\";\nimport Inputs from \"./Componentes/Inputs\";\nimport Header from \"./Section/Header\";\nimport Nombre from \"./Componentes/Nombre\";\nconst days = [\"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\", \"Domindo\"];\n\nfunction App() {\n  const [ejercicios, setEjercicios] = useState([]);\n  const [datos, setDatos] = useState([]);\n  const [nombre, setNombre] = useState(\"\");\n  const [edad, setEdad] = useState(\"\");\n  const [peso, setPeso] = useState(\"\");\n\n  const agregarEjercicio = (e, dia) => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (value) {\n      const clon = [...ejercicios];\n      if (!clon[dia]) clon[dia] = [];\n      const index = clon[dia].findIndex(ej => ej.ejercicio === name); // item de ejercicio igual al nombre\n\n      if (index === -1) {\n        // si no lo encuentra entonces hace un push \n        clon[dia].push({\n          ejercicio: name,\n          repeticiones: value\n        });\n      } else {\n        clon[dia][index] = {\n          ejercicio: name,\n          repeticiones: value\n        }; // si el indice de arriba existe cambialo por lo nuevo \n      }\n\n      setEjercicios(clon);\n    }\n  };\n\n  const agregar = () => {\n    const clon = [...datos];\n    clon.push({\n      nombre,\n      edad,\n      peso\n    });\n    setDatos(clon);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Nombre, {\n    setNombre: setNombre,\n    setEdad: setEdad,\n    setPeso: setPeso,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Inputs, {\n    agregarEjercicio: agregarEjercicio // agregro la funcion\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"cards-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ejercicios.map((card, index) => {\n    return React.createElement(CardDias, {\n      key: index + 1,\n      day: days[index],\n      actividad: card ? card : [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }), React.createElement(\"button\", {\n    onClick: agregar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gabrielagomez/Desktop/ADA/Git/gim-retro/src/App.js"],"names":["React","useState","CardDias","Inputs","Header","Nombre","days","App","ejercicios","setEjercicios","datos","setDatos","nombre","setNombre","edad","setEdad","peso","setPeso","agregarEjercicio","e","dia","name","value","target","clon","index","findIndex","ej","ejercicio","push","repeticiones","agregar","map","card"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CardDias from \"./Componentes/CardDias\";\nimport Inputs from \"./Componentes/Inputs\";\nimport Header from \"./Section/Header\";\nimport Nombre from \"./Componentes/Nombre\";\nconst days = [\"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\", \"Domindo\"];\nfunction App() {\nconst [ejercicios,setEjercicios] = useState([]);\n\nconst [datos,setDatos]=useState([])\nconst [nombre,setNombre]=useState(\"\")\nconst [edad,setEdad]=useState(\"\")\nconst [peso,setPeso]=useState(\"\")\n\n  const agregarEjercicio = (e, dia) =>{\n    const {name,value} = e.target;\n    if(value){\n      const clon = [...ejercicios];\n      if(!clon[dia]) clon[dia] = [];\n      const index= clon[dia].findIndex(ej=>ej.ejercicio===name); // item de ejercicio igual al nombre\n      if(index === -1) {// si no lo encuentra entonces hace un push \n        clon[dia].push({ejercicio:name,repeticiones:value});\n      }else { \n        clon[dia][index] = {ejercicio:name,repeticiones:value}; // si el indice de arriba existe cambialo por lo nuevo \n      }\n\n      setEjercicios(clon);\n    }\n  }\n\n  const agregar=()=>{\n    const clon= [...datos];\n    clon.push({nombre,edad,peso});\n    setDatos(clon) \n  }\n  \n \n  return (\n    <div>\n      <Header></Header>\n      <Nombre\n      setNombre={setNombre}\n      setEdad={setEdad}\n      setPeso={setPeso}\n      ></Nombre>\n      <div className=\"input-container\">\n      <Inputs\n        agregarEjercicio={agregarEjercicio} // agregro la funcion\n      ></Inputs>\n      </div>\n      <div className=\"cards-container\">\n        {ejercicios.map((card, index) => {\n          return (\n            <CardDias key={index + 1} day={days[index]} actividad={card?card:[]}></CardDias>\n          );\n        })}\n        <button onClick={agregar}></button>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}